function doPost(e) {
  try {
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Form Responses 1');
    const data = JSON.parse(e.postData.contents);

    // ✅ Make sure all 10 fields are passed, even if empty
    const row = [
      new Date(), // Timestamp
      data.date || "", // Date
      data.category || "", // Category
      data.subCategory || "", // ✅ Sub Category (must be included)
      data.item || "", // Item
      data.amount || "", // Amount
      data.email || "", // Email Address
      data.shop || "", // Shop/Site/Person name
      data.paymentMode || "", // Mode of payment
      Array.isArray(data.labels)
        ? data.labels.join(", ")
        : data.labels || "" // Labels
    ];

    sheet.appendRow(row);

    return ContentService
      .createTextOutput(
        JSON.stringify({
          success: true,
          message: "Expense added successfully",
        })
      )
      .setMimeType(ContentService.MimeType.JSON);

  } catch (error) {
    return ContentService
      .createTextOutput(
        JSON.stringify({
          success: false,
          message: error.toString(),
        })
      )
      .setMimeType(ContentService.MimeType.JSON);
  }
}

// ✅ Fetch all data (including Labels)
function doGet(e) {
  try {
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Form Responses 1');
    const data = sheet.getDataRange().getValues(); // all rows

    // Assume first row is header
    const headers = data[0];
    const rows = data.slice(1);

    const expenses = rows.map(r => ({
      timestamp: r[0],
      date: r[1],
      category: r[2],
      subCategory: r[3], // ✅ Added
     item: r[4],
      amount: r[5],
      email: r[6],
      shop: r[7],
      paymentMode: r[8],
      labels: r[9] ? r[9].split(",").map(s => s.trim()).filter(Boolean) : []
    }));

    return ContentService
      .createTextOutput(JSON.stringify(expenses))
      .setMimeType(ContentService.MimeType.JSON);

  } catch (error) {
    return ContentService
      .createTextOutput(JSON.stringify({ error: error.toString() }))
      .setMimeType(ContentService.MimeType.JSON);
  }
}
